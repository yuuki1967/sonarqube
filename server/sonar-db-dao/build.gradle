sonarqube {
  properties {
    property 'sonar.projectName', "${projectTitle} :: DAO"
  }
}

dependencies {
  // please keep the list grouped by configuration and ordered by name

  compile project(':server:sonar-db-core')
  compile project(':server:sonar-db-migration')
  compile project(':sonar-core')

  compileOnly 'com.google.code.findbugs:jsr305'

  testCompile 'com.tngtech.java:junit-dataprovider'
  testCompile 'junit:junit'
  testCompile 'org.assertj:assertj-core'
  testCompile 'org.assertj:assertj-guava'
  testCompile 'org.dbunit:dbunit'
  testCompile 'org.mockito:mockito-core'
  testCompile project(':sonar-testing-harness')
  testCompile project(':server:sonar-db-core').sourceSets.test.output

  testCompileOnly 'com.google.code.findbugs:jsr305'

  testRuntime 'com.h2database:h2'
  testRuntime 'com.microsoft.sqlserver:mssql-jdbc'
  testRuntime 'com.oracle.jdbc:ojdbc8'
  testRuntime 'mysql:mysql-connector-java'
  testRuntime 'org.postgresql:postgresql'
}

test {
  systemProperty 'orchestrator.configUrl', System.getProperty('orchestrator.configUrl')
}

task testJar(type: Jar) {
  classifier = 'tests'
  from sourceSets.test.output
}

configurations {
  tests
}

artifacts {
   tests testJar
}
