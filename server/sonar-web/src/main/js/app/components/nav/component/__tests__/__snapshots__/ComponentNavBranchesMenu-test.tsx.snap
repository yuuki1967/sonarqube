// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders list 1`] = `
<DropdownOverlay
  noPadding={true}
>
  <div
    className="menu-search"
  >
    <SearchBox
      autoFocus={true}
      onChange={[Function]}
      onKeyDown={[Function]}
      placeholder="branches.search_for_branches"
      value=""
    />
  </div>
  <ul
    className="menu menu-vertically-limited"
  >
    <ComponentNavBranchesMenuItem
      branchLike={
        Object {
          "isMain": true,
          "name": "master",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      innerRef={[Function]}
      key="branch-master"
      onSelect={[Function]}
      selected={true}
    />
    <li
      className="menu-header navbar-context-meta-branch-menu-title"
    >
      branches.pull_requests
    </li>
    <ComponentNavBranchesMenuItem
      branchLike={
        Object {
          "base": "master",
          "branch": "feature",
          "key": "1234",
          "status": Object {
            "qualityGateStatus": "OK",
          },
          "title": "qux",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      innerRef={[Function]}
      key="pull-request-1234"
      onSelect={[Function]}
      selected={false}
    />
    <li
      className="divider"
    />
    <li
      className="menu-header"
    >
      <div
        className="display-inline-block text-middle"
      >
        branches.orphan_branches
      </div>
      <HelpTooltip
        className="spacer-left"
        overlay="branches.orphan_branches.tooltip"
      />
    </li>
    <ComponentNavBranchesMenuItem
      branchLike={
        Object {
          "isMain": false,
          "isOrphan": true,
          "mergeBranch": "master",
          "name": "baz",
          "status": Object {
            "qualityGateStatus": "OK",
          },
          "type": "SHORT",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      innerRef={[Function]}
      key="branch-baz"
      onSelect={[Function]}
      selected={false}
    />
    <ComponentNavBranchesMenuItem
      branchLike={
        Object {
          "isMain": false,
          "isOrphan": undefined,
          "mergeBranch": "master",
          "name": "foo",
          "status": Object {
            "qualityGateStatus": "OK",
          },
          "type": "SHORT",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      innerRef={[Function]}
      key="branch-foo"
      onSelect={[Function]}
      selected={false}
    />
    <li
      className="divider"
    />
    <ComponentNavBranchesMenuItem
      branchLike={
        Object {
          "isMain": false,
          "name": "bar",
          "type": "LONG",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      innerRef={[Function]}
      key="branch-bar"
      onSelect={[Function]}
      selected={false}
    />
    <li
      className="divider"
    />
    <li
      className="menu-header"
    >
      <div
        className="display-inline-block text-middle"
      >
        branches.orphan_branches
      </div>
      <HelpTooltip
        className="spacer-left"
        overlay="branches.orphan_branches.tooltip"
      />
    </li>
    <ComponentNavBranchesMenuItem
      branchLike={
        Object {
          "isMain": false,
          "isOrphan": true,
          "mergeBranch": "master",
          "name": "baz",
          "status": Object {
            "qualityGateStatus": "OK",
          },
          "type": "SHORT",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      innerRef={[Function]}
      key="branch-baz"
      onSelect={[Function]}
      selected={false}
    />
  </ul>
</DropdownOverlay>
`;

exports[`searches 1`] = `
<DropdownOverlay
  noPadding={true}
>
  <div
    className="menu-search"
  >
    <SearchBox
      autoFocus={true}
      onChange={[Function]}
      onKeyDown={[Function]}
      placeholder="branches.search_for_branches"
      value="bar"
    />
  </div>
  <ul
    className="menu menu-vertically-limited"
  >
    <li
      className="menu-header navbar-context-meta-branch-menu-title"
    >
      branches.short_lived_branches
    </li>
    <ComponentNavBranchesMenuItem
      branchLike={
        Object {
          "isMain": false,
          "isOrphan": undefined,
          "mergeBranch": "master",
          "name": "foobar",
          "status": Object {
            "qualityGateStatus": "OK",
          },
          "type": "SHORT",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      innerRef={[Function]}
      key="branch-foobar"
      onSelect={[Function]}
      selected={true}
    />
    <li
      className="divider"
    />
    <ComponentNavBranchesMenuItem
      branchLike={
        Object {
          "isMain": false,
          "name": "BARBAZ",
          "type": "LONG",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      innerRef={[Function]}
      key="branch-BARBAZ"
      onSelect={[Function]}
      selected={false}
    />
    <li
      className="divider"
    />
    <ComponentNavBranchesMenuItem
      branchLike={
        Object {
          "isMain": false,
          "name": "bar",
          "type": "LONG",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      innerRef={[Function]}
      key="branch-bar"
      onSelect={[Function]}
      selected={false}
    />
  </ul>
</DropdownOverlay>
`;
