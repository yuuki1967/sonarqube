/*
 * SonarQube
 * Copyright (C) 2009-2019 SonarSource SA
 * mailto:info AT sonarsource DOT com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
import * as React from 'react';
import { shallow } from 'enzyme';
import VulnerabilityList from '../VulnerabilityList';

jest.mock('../../../../helpers/standards.json', () => ({
  default: {
    owaspTop10: { a1: { title: 'a1 title' }, unknown: { title: 'Not OWAPS' } },
    sansTop25: { 'risky-resource': { title: 'Risky Resource Management' } },
    cwe: { 42: { title: 'cwe-42 title' }, unknown: { title: 'Unknown CWE' } }
  }
}));

const component = { key: 'foo', name: 'Foo', qualifier: 'TRK' } as T.Component;
const findings = [
  {
    activeRules: 1,
    totalRules: 1,
    category: 'a1',
    vulnerabilities: 2,
    vulnerabilityRating: 5,
    toReviewSecurityHotspots: 2,
    openSecurityHotspots: 10,
    wontFixSecurityHotspots: 0,
    distribution: [
      {
        activeRules: 1,
        totalRules: 1,
        cwe: '42',
        vulnerabilities: 1,
        vulnerabilityRating: 1,
        toReviewSecurityHotspots: 2,
        openSecurityHotspots: 10,
        wontFixSecurityHotspots: 0
      }
    ]
  },
  {
    activeRules: 1,
    totalRules: 2,
    category: 'a2',
    vulnerabilities: 2,
    vulnerabilityRating: 5,
    toReviewSecurityHotspots: 2,
    openSecurityHotspots: 10,
    wontFixSecurityHotspots: 0,
    distribution: [
      {
        activeRules: 1,
        totalRules: 1,
        cwe: '42',
        vulnerabilities: 1,
        vulnerabilityRating: 1,
        toReviewSecurityHotspots: 2,
        openSecurityHotspots: 10,
        wontFixSecurityHotspots: 0
      }
    ]
  },
  {
    activeRules: 0,
    totalRules: 1,
    category: 'a3',
    vulnerabilities: 2,
    vulnerabilityRating: 5,
    toReviewSecurityHotspots: 2,
    openSecurityHotspots: 10,
    wontFixSecurityHotspots: 0,
    distribution: [
      {
        activeRules: 1,
        totalRules: 1,
        cwe: '42',
        vulnerabilities: 1,
        vulnerabilityRating: 1,
        toReviewSecurityHotspots: 2,
        openSecurityHotspots: 10,
        wontFixSecurityHotspots: 0
      }
    ]
  },
  {
    activeRules: 1,
    totalRules: 1,
    category: 'unknown',
    vulnerabilities: 3,
    vulnerabilityRating: 3,
    toReviewSecurityHotspots: 8,
    openSecurityHotspots: 100,
    wontFixSecurityHotspots: 10
  }
];

it('renders', () => {
  const wrapper = shallow(
    <VulnerabilityList
      component={component}
      findings={findings}
      showCWE={false}
      type="owaspTop10"
    />
  );
  expect(wrapper.find('tr').length).toBe(6);
  expect(wrapper).toMatchSnapshot();
});

it('renders with cwe', () => {
  const wrapper = shallow(
    <VulnerabilityList component={component} findings={findings} showCWE={true} type="owaspTop10" />
  );
  expect(wrapper.find('tr').length).toBe(9);
  expect(wrapper).toMatchSnapshot();
});
