sonarqube {
  properties {
    property 'sonar.projectName', "${projectTitle} :: Server"
  }
}

sourceSets {
  test {
    resources {
      srcDirs += ['src/test/projects']
    }
  }
}


import org.apache.tools.ant.filters.ReplaceTokens
processResources {
  filesMatching('build.properties') {
    filter ReplaceTokens, tokens: [
      'buildNumber': release ? 'git rev-parse HEAD'.execute().text.trim() : 'N/A'
    ]
  }
}

dependencies {
  // please keep the list grouped by configuration and ordered by name

  compile 'ch.qos.logback:logback-access'
  compile 'ch.qos.logback:logback-classic'
  compile 'ch.qos.logback:logback-core'
  compile 'com.google.code.gson:gson'
  compile 'com.google.protobuf:protobuf-java'
  compile 'com.googlecode.java-diff-utils:diffutils'
  compile 'com.hazelcast:hazelcast-client'
  compile 'commons-dbutils:commons-dbutils'
  compile 'io.jsonwebtoken:jjwt'
  compile 'javax.xml.bind:jaxb-api'
  compile 'org.apache.httpcomponents:httpclient'
  compile 'org.apache.logging.log4j:log4j-api'
  compile 'org.apache.tomcat.embed:tomcat-embed-core'
  compile 'org.apache.commons:commons-dbcp2'
  compile 'org.elasticsearch.client:transport'
  compile 'org.picocontainer:picocontainer'
  compile 'org.slf4j:jul-to-slf4j'
  compile 'org.slf4j:slf4j-api'
  compile 'org.sonarsource.update-center:sonar-update-center-common'
  compile 'org.mindrot:jbcrypt'

  compile project(':server:sonar-ce-common')
  compile project(':server:sonar-ce-task')
  compile project(':server:sonar-ce-task-projectanalysis')
  compile project(':server:sonar-db-dao')
  compile project(':server:sonar-db-migration')
  compile project(':server:sonar-process')
  compile project(':server:sonar-server-common')
  compile project(':sonar-core')
  compile project(':sonar-scanner-protocol')
  compile project(':sonar-markdown')
  compile project(':sonar-duplications')
  runtime project(path: ':sonar-plugin-api', configuration: 'shadow')
  compileOnly project(path: ':sonar-plugin-api')
  compile project(':sonar-ws')

  compileOnly 'com.google.code.findbugs:jsr305'
  // not a transitive dep. At runtime lib/jdbc/h2 is used
  compileOnly 'com.h2database:h2'

  testCompile 'com.github.kevinsawicki:http-request'
  testCompile 'com.google.code.findbugs:jsr305'
  testCompile 'com.h2database:h2'
  testCompile 'com.squareup.okhttp3:mockwebserver'
  testCompile 'com.tngtech.java:junit-dataprovider'
  testCompile 'junit:junit'
  testCompile 'org.apache.logging.log4j:log4j-api'
  testCompile 'org.apache.logging.log4j:log4j-core'
  testCompile 'org.assertj:assertj-core'
  testCompile 'org.assertj:assertj-guava'
  testCompile 'org.eclipse.jetty:jetty-server'
  testCompile 'org.eclipse.jetty:jetty-servlet'
  testCompile 'org.hamcrest:hamcrest-all'
  testCompile 'org.mockito:mockito-core'
  testCompile 'org.subethamail:subethasmtp'
  testCompile project(':server:sonar-db-testing')
  testCompile project(path: ":server:sonar-server-common", configuration: "tests")
}

task testJar(type: Jar) {
  classifier = 'tests'
  from sourceSets.test.output
}

configurations {
  tests
}

artifacts {
 tests testJar
}
